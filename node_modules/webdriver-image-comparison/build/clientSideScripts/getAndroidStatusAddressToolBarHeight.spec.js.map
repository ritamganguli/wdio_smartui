{"version":3,"file":"getAndroidStatusAddressToolBarHeight.spec.js","sourceRoot":"","sources":["../../lib/clientSideScripts/getAndroidStatusAddressToolBarHeight.spec.ts"],"names":[],"mappings":"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","sourcesContent":["import { ANDROID_OFFSETS } from '../helpers/constants';\nimport { ANDROID_DEVICES, NAVIGATOR_APP_VERSIONS, CONFIGURABLE } from '../mocks/mocks';\nimport getAndroidStatusAddressToolBarOffsets from './getAndroidStatusAddressToolBarOffsets';\n\ndescribe('getAndroidStatusAddressToolBarOffsets', () => {\n  it('should get the android status, address and toolbar height with only a major version in the navigator', () => {\n    setEnvironment('ANDROID', 9, 'NEXUS_5X');\n\n    expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: false, isLandscape: false })).toMatchSnapshot();\n  });\n\n  it('should get the android status, address and toolbar height with major and minor version in the navigator', () => {\n    setEnvironment('ANDROID', 8, 'NEXUS_5X');\n\n    expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: false, isLandscape: false })).toMatchSnapshot();\n  });\n\n  it('should get the android status, address and toolbar height with major, minor and patch version in the navigator', () => {\n    setEnvironment('ANDROID', 7, 'NEXUS_5X');\n\n    expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: false, isLandscape: false })).toMatchSnapshot();\n  });\n\n  it('should set the default toolbar height when the toolbar height will become negative', () => {\n    setEnvironment('ANDROID', 7, 'NEXUS_5X_INNER_HEIGHT');\n\n    expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: true, isLandscape: false })).toMatchSnapshot();\n  });\n\n  it('should set the dimensions properly for a device in landscape mode', () => {\n    setEnvironment('ANDROID', 7, 'NEXUS_5X');\n\n    expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: true, isLandscape: true })).toMatchSnapshot();\n  });\n\n  it('should set the dimensions properly for a table in landscape mode', () => {\n    setEnvironment('ANDROID', 7, 'TABLET_WIDTH');\n\n    expect(getAndroidStatusAddressToolBarOffsets(ANDROID_OFFSETS, { isHybridApp: true, isLandscape: true })).toMatchSnapshot();\n  });\n});\n\n/**\n * Set the environment for the test\n */\nfunction setEnvironment(os: string, version: number, deviceType: string) {\n  // @ts-ignore\n  Object.defineProperty(navigator, 'appVersion', { value: NAVIGATOR_APP_VERSIONS[os][version], ...CONFIGURABLE });\n  // @ts-ignore\n  Object.defineProperty(window.screen, 'width', { value: ANDROID_DEVICES[deviceType].width, ...CONFIGURABLE });\n  // @ts-ignore\n  Object.defineProperty(window.screen, 'height', { value: ANDROID_DEVICES[deviceType].height, ...CONFIGURABLE });\n  // @ts-ignore\n  Object.defineProperty(window, 'innerWidth', { value: ANDROID_DEVICES[deviceType].innerWidth, ...CONFIGURABLE });\n  // @ts-ignore\n  Object.defineProperty(window, 'innerHeight', { value: ANDROID_DEVICES[deviceType].innerHeight, ...CONFIGURABLE });\n}\n"]}