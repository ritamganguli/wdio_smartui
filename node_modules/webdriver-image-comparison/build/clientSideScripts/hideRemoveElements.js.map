{"version":3,"file":"hideRemoveElements.js","sourceRoot":"","sources":["../../lib/clientSideScripts/hideRemoveElements.ts"],"names":[],"mappings":";;AAKA,SAAwB,kBAAkB,CACxC,kBAGC,EACD,UAAmB;IAEnB,IAAM,gBAAgB,GAA4B,EAAE,CAAC;IACrD,kBAAkB,CAAC,IAAI,CAAC,OAAO,CAAC,UAAC,OAAO;QACtC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,UAAC,aAAuC,IAAK,OAAA,YAAY,CAAC,aAAa,EAAE,YAAY,EAAE,UAAU,CAAC,EAArD,CAAqD,CAAC,CAAC;SAC5H;QACD,YAAY,CAAC,OAAO,EAAE,YAAY,EAAE,UAAU,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,kBAAkB,CAAC,MAAM,CAAC,OAAO,CAAC,UAAC,OAAO;QACxC,IAAI,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EAAE;YAC1B,OAAO,OAAO,CAAC,OAAO,CAAC,UAAC,aAAuC,IAAK,OAAA,YAAY,CAAC,aAAa,EAAE,SAAS,EAAE,UAAU,CAAC,EAAlD,CAAkD,CAAC,CAAC;SACzH;QACD,YAAY,CAAC,OAAO,EAAE,SAAS,EAAE,UAAU,CAAC,CAAC;IAC/C,CAAC,CAAC,CAAC;IAEH,SAAS,YAAY,CAAC,EAA4B,EAAE,IAAY,EAAE,UAAmB;QAEnF,IAAI,EAAE,CAAC,KAAK,EAAE;YAGZ,oBAAoB,CAAC,EAAE,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;SAC5C;aAAM;YAIL,IAAI;gBAEF,IAAM,QAAQ,GAAG,EAAE,CAAC,QAAQ,CAAC;gBAE7B,IAAI,gBAAgB,CAAC,QAAQ,CAAC,IAAI,IAAI,EAAE;oBACtC,gBAAgB,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;oBAClC,IAAM,KAAK,GAAG,QAAQ,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;oBAElD,KAAK,CAAC,OAAO,CAAC,UAAC,QAAQ,IAAK,OAAA,oBAAoB,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,EAAhD,CAAgD,CAAC,CAAC;iBAC/E;aACF;YAAC,OAAO,CAAC,EAAE;gBAGV,OAAO,kBAAkB,CAAC,EAAE,CAAC,QAAQ,CAAC,CAAC,OAAO,CAAC,UAAC,QAAQ,IAAK,OAAA,oBAAoB,CAAC,QAAQ,EAAE,IAAI,EAAE,UAAU,CAAC,EAAhD,CAAgD,CAAC,CAAC;aAChH;SACF;IACH,CAAC;IAED,SAAS,oBAAoB,CAAC,EAAe,EAAE,IAAY,EAAE,UAAmB;QAC9E,IAAM,KAAK,GAAG,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM,CAAC;QAExD,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,EAAE,CAAC;IAC3C,CAAC;IAGD,SAAS,kBAAkB,CAAC,cAAsB;QAChD,IAAM,MAAM,GAAG,EAAE,CAAC;QAClB,IAAM,aAAa,GAAG,QAAQ,CAAC,QAAQ,CAAC,cAAc,EAAE,QAAQ,EAAE,IAAI,EAAE,WAAW,CAAC,0BAA0B,EAAE,IAAI,CAAC,CAAC;QAEtH,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,aAAa,CAAC,cAAc,EAAE,CAAC,EAAE,EAAE;YACrD,MAAM,CAAC,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;SAC5C;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;AACH,CAAC;AAnED,qCAmEC","sourcesContent":["import { WebElement } from 'selenium-webdriver';\n\n/**\n * Hide or remove elements on the page\n */\nexport default function hideRemoveElements(\n  hideRemoveElements: {\n    hide: (HTMLElement | HTMLElement[] | WebElement | WebElement[])[];\n    remove: (HTMLElement | HTMLElement[])[];\n  },\n  hideRemove: boolean,\n): any {\n  const visitedSelectors: Record<string, boolean> = {};\n  hideRemoveElements.hide.forEach((element) => {\n    if (Array.isArray(element)) {\n      return element.forEach((singleElement: HTMLElement | WebElement) => hideRemoveEl(singleElement, 'visibility', hideRemove));\n    }\n    hideRemoveEl(element, 'visibility', hideRemove);\n  });\n\n  hideRemoveElements.remove.forEach((element) => {\n    if (Array.isArray(element)) {\n      return element.forEach((singleElement: HTMLElement | WebElement) => hideRemoveEl(singleElement, 'display', hideRemove));\n    }\n    hideRemoveEl(element, 'display', hideRemove);\n  });\n\n  function hideRemoveEl(el: HTMLElement | WebElement, prop: string, hideRemove: boolean) {\n    // @ts-ignore\n    if (el.style) {\n      // Here we get the HTMLElement\n      // @ts-ignore\n      setPropertyToElement(el, prop, hideRemove);\n    } else {\n      // Here we have the WebElement, with the web element we can have 2 types of selectors\n      // css and xpath, transform them into HTML\n      // This is an anti pattern, but I don't know how to do this better with XPATH selection\n      try {\n        // @ts-ignore\n        const selector = el.selector;\n\n        if (visitedSelectors[selector] == null) {\n          visitedSelectors[selector] = true;\n          const elems = document.querySelectorAll(selector);\n\n          elems.forEach((singleEl) => setPropertyToElement(singleEl, prop, hideRemove));\n        }\n      } catch (e) {\n        // 99.99% sure that we have XPATH here\n        // @ts-ignore\n        return getElementsByXpath(el.selector).forEach((singleEl) => setPropertyToElement(singleEl, prop, hideRemove));\n      }\n    }\n  }\n\n  function setPropertyToElement(el: HTMLElement, prop: string, hideRemove: boolean) {\n    const value = prop === 'visibility' ? 'hidden' : 'none';\n    // @ts-ignore\n    el.style[prop] = hideRemove ? value : '';\n  }\n\n  // Stupid TypeScript =)\n  function getElementsByXpath(xpathToExecute: string): any[] {\n    const result = [];\n    const nodesSnapshot = document.evaluate(xpathToExecute, document, null, XPathResult.ORDERED_NODE_SNAPSHOT_TYPE, null);\n\n    for (let i = 0; i < nodesSnapshot.snapshotLength; i++) {\n      result.push(nodesSnapshot.snapshotItem(i));\n    }\n\n    return result;\n  }\n}\n"]}