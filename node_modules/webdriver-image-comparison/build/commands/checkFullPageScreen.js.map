{"version":3,"file":"checkFullPageScreen.js","sourceRoot":"","sources":["../../lib/commands/checkFullPageScreen.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,4CAAwD;AACxD,0CAAiD;AACjD,2DAAsD;AAMtD,8CAA0D;AAK1D,SAA8B,mBAAmB,CAC/C,OAAgB,EAChB,YAA0B,EAC1B,OAAgB,EAChB,GAAW,EACX,oBAA0C;;;;;;oBAGpC,mBAAmB,GAAwB;wBAC/C,GAAG,EAAE,oBAAoB,CAAC,GAAG;wBAC7B,MAAM,4DACD,CAAC,qBAAqB,IAAI,oBAAoB,CAAC,MAAM;4BACtD,CAAC,CAAC,EAAE,mBAAmB,EAAE,oBAAoB,CAAC,MAAM,CAAC,mBAAmB,EAAE;4BAC1E,CAAC,CAAC,EAAE,CAAC,GACJ,CAAC,uBAAuB,IAAI,oBAAoB,CAAC,MAAM;4BACxD,CAAC,CAAC,EAAE,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,CAAC,qBAAqB,EAAE;4BAC9E,CAAC,CAAC,EAAE,CAAC,GACJ,CAAC,gBAAgB,IAAI,oBAAoB,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,cAAc,EAAE,oBAAoB,CAAC,MAAM,CAAC,cAAc,EAAE,CAAC,CAAC,CAAC,EAAE,CAAC,GACvH,EAAE,YAAY,EAAE,oBAAoB,CAAC,MAAM,CAAC,YAAY,IAAI,EAAE,EAAE,GAChE,EAAE,cAAc,EAAE,oBAAoB,CAAC,MAAM,CAAC,cAAc,IAAI,EAAE,EAAE,GACpE,EAAE,oBAAoB,EAAE,oBAAoB,CAAC,MAAM,CAAC,oBAAoB,IAAI,EAAE,EAAE,CACpF;qBACF,CAAC;oBACkD,WAAM,IAAA,4BAAkB,EAC1E,OAAO,EACP,YAAY,EACZ,OAAO,EACP,GAAG,EACH,mBAAmB,CACpB,EAAA;;oBANK,KAA8C,SAMnD,EANO,gBAAgB,sBAAA,EAAE,QAAQ,cAAA,EAAE,WAAW,iBAAA;oBASzC,cAAc,GAAG,IAAA,8BAAoB,EAAC,oBAAoB,CAAC,MAAM,CAAC,CAAC;oBACnE,qBAAqB,GAAG;wBAC5B,gBAAgB,kBAAA;wBAChB,cAAc,EAAE;4BACd,GAAG,EAAE,oBAAoB,CAAC,GAAG,CAAC,cAAc;4BAC5C,MAAM,EAAE,cAAc;yBACvB;wBACD,QAAQ,UAAA;wBACR,aAAa,EAAE;4BACb,gBAAgB,EAAE,oBAAoB,CAAC,GAAG,CAAC,gBAAgB;4BAC3D,YAAY,EAAE,OAAO,CAAC,YAAY;4BAClC,cAAc,EAAE,OAAO,CAAC,cAAc;4BACtC,UAAU,EAAE,OAAO,CAAC,UAAU;4BAC9B,WAAW,EAAE,YAAY,CAAC,WAAW;4BACrC,UAAU,EAAE,YAAY,CAAC,UAAU;4BACnC,QAAQ,EAAE,IAAA,qBAAa,EAAC,YAAY,CAAC,YAAY,CAAC;4BAClD,eAAe,EAAE,oBAAoB,CAAC,GAAG,CAAC,eAAe;yBAC1D;wBACD,4BAA4B,EAAE,YAAY,CAAC,mBAAmB;wBAC9D,WAAW,EAAE,oBAAoB,CAAC,GAAG,CAAC,WAAW;wBACjD,WAAW,aAAA;wBACX,QAAQ,EAAE,oBAAoB,CAAC,GAAG,CAAC,QAAQ;wBAC3C,YAAY,EAAE,YAAY,CAAC,YAAY;qBACxC,CAAC;oBAGF,WAAO,IAAA,4BAAmB,EAAC,OAAO,CAAC,QAAQ,EAAE,qBAAqB,CAAC,EAAC;;;;CACrE;AA3DD,sCA2DC","sourcesContent":["import { executeImageCompare } from '../methods/images';\nimport { checkIsMobile } from '../helpers/utils';\nimport saveFullPageScreen from './saveFullPageScreen';\nimport { ImageCompareResult } from '../methods/images.interfaces';\nimport { Methods } from '../methods/methods.interface';\nimport { InstanceData } from '../methods/instanceData.interfaces';\nimport { Folders } from '../base.interface';\nimport { CheckFullPageOptions, SaveFullPageOptions } from './fullPage.interfaces';\nimport { methodCompareOptions } from '../helpers/options';\n\n/**\n * Compare a fullpage screenshot\n */\nexport default async function checkFullPageScreen(\n  methods: Methods,\n  instanceData: InstanceData,\n  folders: Folders,\n  tag: string,\n  checkFullPageOptions: CheckFullPageOptions,\n): Promise<ImageCompareResult | number> {\n  // 1. Take the actual full page screenshot and retrieve the needed data\n  const saveFullPageOptions: SaveFullPageOptions = {\n    wic: checkFullPageOptions.wic,\n    method: {\n      ...('disableCSSAnimation' in checkFullPageOptions.method\n        ? { disableCSSAnimation: checkFullPageOptions.method.disableCSSAnimation }\n        : {}),\n      ...('fullPageScrollTimeout' in checkFullPageOptions.method\n        ? { fullPageScrollTimeout: checkFullPageOptions.method.fullPageScrollTimeout }\n        : {}),\n      ...('hideScrollBars' in checkFullPageOptions.method ? { hideScrollBars: checkFullPageOptions.method.hideScrollBars } : {}),\n      ...{ hideElements: checkFullPageOptions.method.hideElements || [] },\n      ...{ removeElements: checkFullPageOptions.method.removeElements || [] },\n      ...{ hideAfterFirstScroll: checkFullPageOptions.method.hideAfterFirstScroll || [] },\n    },\n  };\n  const { devicePixelRatio, fileName, isLandscape } = await saveFullPageScreen(\n    methods,\n    instanceData,\n    folders,\n    tag,\n    saveFullPageOptions,\n  );\n\n  // 2a. Determine the options\n  const compareOptions = methodCompareOptions(checkFullPageOptions.method);\n  const executeCompareOptions = {\n    devicePixelRatio,\n    compareOptions: {\n      wic: checkFullPageOptions.wic.compareOptions,\n      method: compareOptions,\n    },\n    fileName,\n    folderOptions: {\n      autoSaveBaseline: checkFullPageOptions.wic.autoSaveBaseline,\n      actualFolder: folders.actualFolder,\n      baselineFolder: folders.baselineFolder,\n      diffFolder: folders.diffFolder,\n      browserName: instanceData.browserName,\n      deviceName: instanceData.deviceName,\n      isMobile: checkIsMobile(instanceData.platformName),\n      savePerInstance: checkFullPageOptions.wic.savePerInstance,\n    },\n    isAndroidNativeWebScreenshot: instanceData.nativeWebScreenshot,\n    isHybridApp: checkFullPageOptions.wic.isHybridApp,\n    isLandscape,\n    logLevel: checkFullPageOptions.wic.logLevel,\n    platformName: instanceData.platformName,\n  };\n\n  // 2b Now execute the compare and return the data\n  return executeImageCompare(methods.executor, executeCompareOptions);\n}\n"]}