{"version":3,"file":"afterScreenshot.js","sourceRoot":"","sources":["../../lib/helpers/afterScreenshot.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,sEAAiE;AACjE,kFAA6E;AAC7E,yCAA4C;AAC5C,iCAA0E;AAC1E,4CAAoD;AACpD,6BAA4B;AAG5B,8EAAyE;AACzE,yDAA+C;AAM/C,SAA8B,eAAe,CAAC,QAAkB,EAAE,OAA+B;;;;;;oBAE7F,YAAY,GAWV,OAAO,aAXG,EACZ,WAAW,GAUT,OAAO,YAVE,EACX,mBAAmB,GASjB,OAAO,oBATU,EACT,eAAe,GAQvB,OAAO,SARgB,EACzB,QAAQ,GAON,OAAO,SAPD,EACR,YAAY,GAMV,OAAO,aANG,EACI,YAAY,GAK1B,OAAO,eALmB,EAC5B,WAAW,GAIT,OAAO,YAJE,EACX,QAAQ,GAGN,OAAO,SAHD,EACR,YAAY,GAEV,OAAO,aAFG,EACZ,cAAc,GACZ,OAAO,eADK,CACJ;oBAGN,IAAI,GAAG,IAAA,wBAAgB,EAAC,YAAY,EAAE,QAAQ,CAAC,CAAC;oBAGhD,QAAQ,GAAG,IAAA,sBAAc,EAAC,eAAe,CAAC,CAAC;oBAGjD,WAAM,IAAA,wBAAe,EAAC,WAAW,EAAE,IAAA,WAAI,EAAC,IAAI,EAAE,QAAQ,CAAC,CAAC,EAAA;;oBAAxD,SAAwD,CAAC;yBAIrD,YAAY,EAAZ,cAAY;oBACd,WAAM,QAAQ,CAAC,wBAAc,EAAE,CAAC,YAAY,CAAC,EAAA;;oBAA7C,SAA6C,CAAC;;;yBAK5C,CAAA,YAAY,CAAC,MAAM,GAAG,CAAC,IAAI,cAAc,CAAC,MAAM,GAAG,CAAC,CAAA,EAApD,cAAoD;;;;oBAEpD,WAAM,QAAQ,CAAC,4BAAkB,EAAE,EAAE,IAAI,EAAE,YAAY,EAAE,MAAM,EAAE,cAAc,EAAE,EAAE,KAAK,CAAC,EAAA;;oBAAzF,SAAyF,CAAC;;;;oBAE1F,IAAI,QAAQ,KAAK,4BAAQ,CAAC,KAAK,IAAI,QAAQ,KAAK,4BAAQ,CAAC,IAAI,EAAE;wBAC7D,OAAO,CAAC,GAAG,CACT,mBAAmB,EACnB,yOAKA,GAAC,oIAGV,CACQ,CAAC;qBACH;;;yBAMD,CAAA,mBAAmB,IAAI,IAAA,qBAAa,EAAC,YAAY,CAAC,CAAA,EAAlD,cAAkD;oBACpD,WAAM,QAAQ,CAAC,8BAAoB,EAAE,yBAAa,CAAC,EAAA;;oBAAnD,SAAmD,CAAC;;wBAItD,WAAO;wBACL,gBAAgB,EAAE,eAAe,CAAC,gBAAgB;wBAClD,QAAQ,UAAA;wBACR,WAAW,aAAA;wBACX,IAAI,MAAA;qBACL,EAAC;;;;CACH;AAlED,kCAkEC","sourcesContent":["import hideScrollBars from '../clientSideScripts/hideScrollbars';\nimport removeElementFromDom from '../clientSideScripts/removeElementFromDom';\nimport { CUSTOM_CSS_ID } from './constants';\nimport { checkIsMobile, formatFileName, getAndCreatePath } from './utils';\nimport { saveBase64Image } from '../methods/images';\nimport { join } from 'path';\nimport { Executor } from '../methods/methods.interface';\nimport { AfterScreenshotOptions, ScreenshotOutput } from './afterScreenshot.interfaces';\nimport hideRemoveElements from '../clientSideScripts/hideRemoveElements';\nimport { LogLevel } from './options.interface';\n\n/**\n * Methods that need to be executed after a screenshot has been taken\n * to set all back to the original state\n */\nexport default async function afterScreenshot(executor: Executor, options: AfterScreenshotOptions): Promise<ScreenshotOutput> {\n  const {\n    actualFolder,\n    base64Image,\n    disableCSSAnimation,\n    fileName: fileNameOptions,\n    filePath,\n    hideElements,\n    hideScrollBars: noScrollBars,\n    isLandscape,\n    logLevel,\n    platformName,\n    removeElements,\n  } = options;\n\n  // Get the path\n  const path = getAndCreatePath(actualFolder, filePath);\n\n  // Get the filePath\n  const fileName = formatFileName(fileNameOptions);\n\n  // Save the screenshot\n  await saveBase64Image(base64Image, join(path, fileName));\n\n  // Show the scrollbars again\n  /* istanbul ignore else */\n  if (noScrollBars) {\n    await executor(hideScrollBars, !noScrollBars);\n  }\n\n  // Show elements again\n  /* istanbul ignore else */\n  if (hideElements.length > 0 || removeElements.length > 0) {\n    try {\n      await executor(hideRemoveElements, { hide: hideElements, remove: removeElements }, false);\n    } catch (e) {\n      if (logLevel === LogLevel.debug || logLevel === LogLevel.warn) {\n        console.log(\n          '\\x1b[33m%s\\x1b[0m',\n          `\n#####################################################################################\n WARNING:\n (One of) the elements that needed to be hidden or removed could not be found on the\n page and caused this error\n Error: ${e}\n We made sure the test didn't break.\n#####################################################################################\n`,\n        );\n      }\n    }\n  }\n\n  // Remove the custom set css\n  /* istanbul ignore else */\n  if (disableCSSAnimation || checkIsMobile(platformName)) {\n    await executor(removeElementFromDom, CUSTOM_CSS_ID);\n  }\n\n  // Return the needed data\n  return {\n    devicePixelRatio: fileNameOptions.devicePixelRatio,\n    fileName,\n    isLandscape,\n    path,\n  };\n}\n"]}