{"version":3,"file":"utils.js","sourceRoot":"","sources":["../../lib/helpers/utils.ts"],"names":[],"mappings":"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","sourcesContent":["import { join } from 'path';\nimport { DESKTOP, PLATFORMS } from './constants';\nimport { ensureDirSync } from 'fs-extra';\nimport {\n  FormatFileDefaults,\n  FormatFileNameOptions,\n  GetAddressBarShadowPaddingOptions,\n  GetAndCreatePathOptions,\n  GetToolBarShadowPaddingOptions,\n  ScreenshotSize,\n} from './utils.interfaces';\n\n/**\n * Get and create a folder\n */\nexport function getAndCreatePath(folder: string, options: GetAndCreatePathOptions): string {\n  const { browserName, deviceName, isMobile, savePerInstance } = options;\n  const instanceName = (isMobile ? deviceName : `${DESKTOP}_${browserName}`).replace(/ /g, '_');\n  const subFolder = savePerInstance ? instanceName : '';\n  const folderName = join(folder, subFolder);\n\n  ensureDirSync(folderName);\n\n  return folderName;\n}\n\n/**\n * Format the filename\n */\nexport function formatFileName(options: FormatFileNameOptions): string {\n  const defaults: FormatFileDefaults = {\n    browserName: options.browserName,\n    browserVersion: options.browserVersion,\n    deviceName: options.deviceName,\n    dpr: options.devicePixelRatio,\n    height: options.isMobile ? options.screenHeight : options.outerHeight,\n    logName: options.logName,\n    mobile: options.isMobile && options.isTestInBrowser ? options.browserName : options.isMobile ? 'app' : '',\n    name: options.name,\n    platformName: options.platformName,\n    platformVersion: options.platformVersion,\n    tag: options.tag,\n    width: options.isMobile ? options.screenWidth : options.outerWidth,\n  };\n\n  let fileName = options.formatImageName;\n\n  Object.keys(defaults).forEach((value: string) => {\n    // @ts-ignore\n    // @TODO: Fix this in a proper way\n    fileName = fileName.replace(`{${value}}`, defaults[value]);\n  });\n\n  return `${fileName.replace(/ /g, '_')}.png`;\n}\n\n/**\n * Checks if it is mobile\n */\nexport function checkIsMobile(platformName: string): boolean {\n  return checkIsAndroid(platformName) || checkIsIos(platformName);\n}\n\n/**\n * Checks if the os is Android\n */\nexport function checkIsAndroid(platformName: string): boolean {\n  return platformName.toLowerCase() === PLATFORMS.ANDROID;\n}\n\n/**\n * Checks if the os is IOS\n */\nexport function checkIsIos(platformName: string): boolean {\n  return platformName.toLowerCase() === PLATFORMS.IOS;\n}\n\n/**\n * Checks if the test is executed in a browser\n */\nexport function checkTestInBrowser(browserName: string): boolean {\n  return browserName !== '';\n}\n\n/**\n * Checks if the test is executed in a browser on a mobile phone\n */\nexport function checkTestInMobileBrowser(platformName: string, browserName: string): boolean {\n  return checkIsMobile(platformName) && checkTestInBrowser(browserName);\n}\n\n/**\n * Checks if this is a native webscreenshot on android\n */\nexport function checkAndroidNativeWebScreenshot(platformName: string, nativeWebscreenshot: boolean): boolean {\n  return (checkIsAndroid(platformName) && nativeWebscreenshot) || false;\n}\n\n/**\n * Checks if this is an Android chromedriver screenshot\n */\nexport function checkAndroidChromeDriverScreenshot(platformName: string, nativeWebScreenshot: boolean): boolean {\n  return checkIsAndroid(platformName) && !checkAndroidNativeWebScreenshot(platformName, nativeWebScreenshot);\n}\n\n/**\n * Get the address bar shadow padding. This is only needed for Android native webscreenshot and iOS\n */\nexport function getAddressBarShadowPadding(options: GetAddressBarShadowPaddingOptions): number {\n  const { platformName, browserName, nativeWebScreenshot, addressBarShadowPadding, addShadowPadding } = options;\n  const isTestInMobileBrowser = checkTestInMobileBrowser(platformName, browserName);\n  const isAndroidNativeWebScreenshot = checkAndroidNativeWebScreenshot(platformName, nativeWebScreenshot);\n  const isAndroid = checkIsAndroid(platformName);\n  const isIos = checkIsIos(platformName);\n\n  return isTestInMobileBrowser && ((isAndroidNativeWebScreenshot && isAndroid) || isIos) && addShadowPadding\n    ? addressBarShadowPadding\n    : 0;\n}\n\n/**\n * Get the tool bar shadow padding. This is only needed for iOS\n */\nexport function getToolBarShadowPadding(options: GetToolBarShadowPaddingOptions): number {\n  const { platformName, browserName, toolBarShadowPadding, addShadowPadding } = options;\n\n  return checkTestInMobileBrowser(platformName, browserName) && checkIsIos(platformName) && addShadowPadding\n    ? checkIsIos(platformName)\n      ? // The 9 extra are for iOS home bar for iPhones with a notch or iPads with a home bar\n        toolBarShadowPadding + 9\n      : toolBarShadowPadding\n    : 0;\n}\n\n/**\n * Calculate the data based on the device pixel ratio\n */\nexport function calculateDprData<T>(data: T, devicePixelRatio: number): T {\n  // @ts-ignore\n  // @TODO: need to figure this one out\n  Object.keys(data).map((key) => (data[key] = typeof data[key] === 'number' ? data[key] * devicePixelRatio : data[key]));\n\n  return data;\n}\n\n/**\n * Wait for an amount of milliseconds\n */\nexport async function waitFor(milliseconds: number): Promise<void> {\n  /* istanbul ignore next */\n  return new Promise((resolve) => setTimeout(() => resolve(), milliseconds));\n}\n\n/**\n * Get the size of a screenshot in pixels without the device pixel ratio\n */\nexport function getScreenshotSize(screenshot: string, devicePixelRation = 1): ScreenshotSize {\n  return {\n    height: Buffer.from(screenshot, 'base64').readUInt32BE(20) / devicePixelRation,\n    width: Buffer.from(screenshot, 'base64').readUInt32BE(16) / devicePixelRation,\n  };\n}\n\n/**\n * Get the iOS bezel image names\n */\nexport function getIosBezelImageNames(normalizedDeviceName: string): { topImageName: string; bottomImageName: string } {\n  let topImageName, bottomImageName;\n\n  switch (normalizedDeviceName) {\n    case 'iphonex':\n      topImageName = 'iphonex.iphonexs.iphone11pro-top';\n      bottomImageName = 'iphonex.iphonexs.iphone11pro-bottom';\n      break;\n    case 'iphonexs':\n      topImageName = 'iphonex.iphonexs.iphone11pro-top';\n      bottomImageName = 'iphonex.iphonexs.iphone11pro-bottom';\n      break;\n    case 'iphonexsmax':\n      topImageName = 'iphonexsmax-top';\n      bottomImageName = 'iphonexsmax-bottom';\n      break;\n    case 'iphonexr':\n      topImageName = 'iphonexr.iphone11-top';\n      bottomImageName = 'iphonexr.iphone11-bottom';\n      break;\n    case 'iphone11':\n      topImageName = 'iphonexr.iphone11-top';\n      bottomImageName = 'iphonexr.iphone11-bottom';\n      break;\n    case 'iphone11pro':\n      topImageName = 'iphonex.iphonexs.iphone11pro-top';\n      bottomImageName = 'iphonex.iphonexs.iphone11pro-bottom';\n      break;\n    case 'iphone11promax':\n      topImageName = 'iphone11promax-top';\n      bottomImageName = 'iphone11promax-bottom';\n      break;\n    case 'iphone12':\n      topImageName = 'iphone12.iphone12pro-top';\n      bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom';\n      break;\n    case 'iphone12mini':\n      topImageName = 'iphone12mini-top';\n      bottomImageName = 'iphone12mini.iphone13mini-bottom';\n      break;\n    case 'iphone12pro':\n      topImageName = 'iphone12.iphone12pro-top';\n      bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom';\n      break;\n    case 'iphone12promax':\n      topImageName = 'iphone12promax-top';\n      bottomImageName = 'iphone12promax.iphone13promax.iphone14plus-bottom';\n      break;\n    case 'iphone13':\n      topImageName = 'iphone13.iphone13pro.iphone14-top';\n      bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom';\n      break;\n    case 'iphone13mini':\n      topImageName = 'iphone13mini-top';\n      bottomImageName = 'iphone12mini.iphone13mini-bottom';\n      break;\n    case 'iphone13pro':\n      topImageName = 'iphone13.iphone13pro.iphone14-top';\n      bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom';\n      break;\n    case 'iphone13promax':\n      topImageName = 'iphone13promax.iphone14plus-top';\n      bottomImageName = 'iphone12promax.iphone13promax.iphone14plus-bottom';\n      break;\n    case 'iphone14':\n      topImageName = 'iphone13.iphone13pro.iphone14-top';\n      bottomImageName = 'iphone12.iphone12pro.iphone13.iphone13pro.iphone14-bottom';\n      break;\n    case 'iphone14plus':\n      topImageName = 'iphone13promax.iphone14plus-top';\n      bottomImageName = 'iphone12promax.iphone13promax.iphone14plus-bottom';\n      break;\n    case 'iphone14pro':\n      topImageName = 'iphone14pro-top';\n      bottomImageName = 'iphone14pro-bottom';\n      break;\n    case 'iphone14promax':\n      topImageName = 'iphone14promax-top';\n      bottomImageName = 'iphone14promax-bottom';\n      break;\n    // iPad\n    case 'ipadmini':\n      topImageName = 'ipadmini6th-top';\n      bottomImageName = 'ipadmini6th-bottom';\n      break;\n    case 'ipadair':\n      topImageName = 'ipadair4th.ipadair5th-top';\n      bottomImageName = 'ipadair4th.ipadair5th-bottom';\n      break;\n    case 'ipadpro11':\n      topImageName = 'ipadpro11-top';\n      bottomImageName = 'ipadpro11-bottom';\n      break;\n    case 'ipadpro129':\n      topImageName = 'ipadpro129-top';\n      bottomImageName = 'ipadpro129-bottom';\n      break;\n  }\n\n  return { topImageName, bottomImageName };\n}\n"]}